{"mappings":"weA0BAA,EAAe,C,KA1BF,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCT,IACX,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI9BT,IACb,IACEK,aAAaQ,WAAWb,E,CACxB,MAAOO,GACPC,QAAQM,IAAI,oBAAqBP,EAAME,Q,iBCpB3C,MAAMM,EAASC,SAASC,cAAc,kBACtC,IAAIC,EAAW,GAEe,MAC5B,MAAMC,EAAiBpB,EAAoBqB,KAAK,uBAChD,QAAuBT,IAAnBQ,EAAJ,CAGAX,QAAQM,IAAIC,EAAOM,UACnB,IAAK,MAAMrB,KAAOsB,OAAOC,KAAKJ,GACxBA,EAAeK,eAAexB,KAChCe,EAAOM,SAASrB,GAAKC,MAAQkB,EAAenB,IAGhDkB,EAAWC,CART,CAQuB,EAE3BM,GASAV,EAAOW,iBACL,QACAC,EAAAC,UAAWC,IACT,MAAQC,OAAQC,GAAuBF,EACjCG,EAAOD,EAAmBC,KAC1B/B,EAAQ8B,EAAmB9B,MACjCiB,EAASc,GAAQ/B,EACjBF,EAAoBkC,KAAK,sBAAuBf,EAAS,GACxD,MAELH,EAAOW,iBAAiB,UAjBCG,IACvBA,EAAMK,iBACNL,EAAMC,OAAOK,QACbpC,EAAoBqC,OAAO,uBAC3B5B,QAAQM,IAAII,GACZA,EAAW,EAAE","sources":["src/js/localStorage.js","src/js/03-feedback.js"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error', error.message);\n  }\n}\n\nexport default {\n  save,\n  load,\n  remove,\n};","import localStorageService from \"./localStorage\";\nconst _ = require('lodash');\nconst formEl = document.querySelector(\".feedback-form\");\nlet userData = {};\n\nconst fillContactFormFields = () => {\n  const userDataFromLs = localStorageService.load('feedback-form-state');\n  if (userDataFromLs === undefined) {\n    return;\n  }\n  console.log(formEl.elements);\n  for (const key of Object.keys(userDataFromLs)) {\n    if (userDataFromLs.hasOwnProperty(key)) {\n      formEl.elements[key].value = userDataFromLs[key];\n    }\n  }\n  userData = userDataFromLs;\n};\nfillContactFormFields();\n\nconst onformElElSubmit = event => {\n  event.preventDefault();\n  event.target.reset();\n  localStorageService.remove(\"feedback-form-state\",)\n  console.log(userData);\n  userData = {};\n}\nformEl.addEventListener(\n  'input',\n  _.throttle(event => {\n    const { target: contactFormElement } = event;\n    const name = contactFormElement.name;\n    const value = contactFormElement.value;\n    userData[name] = value;\n    localStorageService.save('feedback-form-state', userData);\n  }, 500)\n);\nformEl.addEventListener('submit', onformElElSubmit);\n\n\n\n\n\n\n\n\n"],"names":["$2338c8cd734f85a6$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","log","$945622fd0f572e60$var$formEl","document","querySelector","$945622fd0f572e60$var$userData","userDataFromLs","load","elements","Object","keys","hasOwnProperty","$945622fd0f572e60$var$fillContactFormFields","addEventListener","$kEUo3","throttle","event","target","contactFormElement","name","save","preventDefault","reset","remove"],"version":3,"file":"03-feedback.f07b5d5a.js.map"}